import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")

import("rtt-franka-hardware-integration")
require("os")


#var string path_model_urdf = os.getenv("GAZEBO_MODEL_PATH")+"/Franka/model.urdf"
#var string path_model_srdf = os.getenv("GAZEBO_MODEL_PATH")+"/Franka/model.srdf"

var string path_model_urdf = "/home/franka/cogimon-gazebo-models/franka-panda-arm/model.urdf"
var string path_model_srdf = "/home/franka/cogimon-gazebo-models/franka-panda-arm/model.srdf"

loadComponent("Franka", "franka::franka_robot")
#setActivityOnCPU("Franka", 0, 90, ORO_SCHED_RT, 2)
#setActivityOnCPU("Franka", 0, 90, ORO_SCHED_RT, 60)
setActivity("Franka", 0.001, 2, ORO_SCHED_RT)
#setActivity("Franka", 0.001, 2, ORO_SCHED_OTHER)
Franka.ip_addr = "172.16.0.2"
Franka.addChain("Franka", "172.16.0.2", path_model_urdf, path_model_srdf)
Franka.configure()
Franka.setControlMode("Franka", "JointTorqueCtrl")
#Franka.start()

import("robot_data_test")
loadComponent("test", "Robot_data_test")
setActivity("test", 0.005, 2, ORO_SCHED_RT)
var ConnPolicy cp
connect("test.joint_vals_in_port", "Franka.full_arm__JointFeedback", cp)
# connect("test.grav_in_port", "Franka.full_arm__GravityFeedback", cp)
# connect("test.coriolis_in_port", "Franka.full_arm__CoriolisFeedback", cp)
# connect("test.joint_trqs_out_port", "Franka.full_arm_JointTorqueCtrl", cp)
test.configure
test.start
