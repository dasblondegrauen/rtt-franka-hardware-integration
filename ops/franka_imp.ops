import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")
import("rtt-franka-hardware-integration")
import("rtt_generic_test_controller")
require("os")

var string path_model_urdf = os.getenv("GAZEBO_MODEL_PATH") + "/franka/model.urdf"
var string path_model_srdf = os.getenv("GAZEBO_MODEL_PATH") + "/franka/model.srdf"

loadComponent("franka", "franka::franka_robot")
setActivity("franka", 0, 90, ORO_SCHED_RT)
franka.ip_addr = "172.16.0.2"
franka.addChain("franka", "172.16.0.2", path_model_urdf, path_model_srdf)
franka.setControlMode("franka", "JointImpedanceCtrl")
franka.configure()
franka.start()

loadComponent("test", "TestController")
setActivity("test", 0.0005, 80, ORO_SCHED_RT)

var ConnPolicy cp
connect("test.joint_vals_in_port", "franka.full_arm_JointFeedback", cp)

test.configure()
connect("test.joint_imp_out_port", "franka.full_arm_JointImpedanceCtrl", cp)
connect("test.joint_pos_out_port", "franka.full_arm_JointPosition", cp)
connect("test.joint_trqs_out_port", "franka.full_arm_JointTorque", cp)
connect("franka.full_arm_GravityFeedback", "test.grav_in_port", cp)
connect("franka.full_arm_CoriolisFeedback", "test.coriolis_in_port", cp)
connect("franka.full_arm_InertiaFeedback", "test.inertia_in_port", cp)
connect("franka.full_arm_JacobianFeedback", "test.jacobian_in_port", cp)
test.start()

var rstrt.dynamics.JointImpedance imp = 7
imp.stiffness[0] = 30
imp.stiffness[1] = 30
imp.stiffness[2] = 30
imp.stiffness[3] = 30
imp.stiffness[4] = 30
imp.stiffness[5] = 30
imp.stiffness[6] = 30
imp.damping[0] = 10
imp.damping[1] = 10
imp.damping[2] = 10
imp.damping[3] = 10
imp.damping[4] = 10
imp.damping[5] = 10
imp.damping[6] = 10

test.setFullImpedance(imp)
test.setMode("position")
